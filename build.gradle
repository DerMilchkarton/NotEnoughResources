buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            // Add maven repo for SpecialSource
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
    maven {
        name = "forge"
        url = "http://files.minecraftforge.net/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven"
    }

}

configurations {
    compileOnly
}

dependencies {
    compile group: 'codechicken', name: 'NotEnoughItems', version: "${version_minecraft}-${version_nei}", ext: 'jar', classifier: "dev"
    compile group: 'codechicken', name: 'CodeChickenCore', version: "${version_minecraft}-${version_cccore}", ext: 'jar', classifier: "dev"
    compile group: 'codechicken', name: 'CodeChickenLib', version: "${version_minecraft}-${version_cclib}", ext: 'jar', classifier: "dev"
    compileOnly fileTree(dir: 'lib', include: '*.jar')
}

group = "neresources"
archivesBaseName = "NotEnoughResources"

minecraft {
    version = "${version_minecraft}-${version_forge}"

    replaceIn "reference/Reference.java"
    replace "@MAJOR@", version_mod_major
    replace "@MINOR@", version_mod_minor
    replace "@REVIS@", version_mod_revis

    if (System.getenv("BUILD_NUMBER") != null) {
        replace "@BUILD@", System.getenv("BUILD_NUMBER")
    } else {
        replace "@BUILD@", "ManuallyBuilt"
    }
}

processResources {
    from 'gradle.properties'
}

allprojects {
    version = "${version_minecraft}-${version_mod_major}.${version_mod_minor}.${version_mod_revis}"

    if (System.getenv("BUILD_NUMBER") != null) {
        version += ".${System.getenv("BUILD_NUMBER")}"
    } else {
        version += "-ManuallyBuilt"
    }

    jar {
        manifest {
            attributes 'FMLAT': 'neresources_at.cfg'
        }
        destinationDir = file(rootProject.getRootDir().getPath() + '/output')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url "file://var/www/maven"
            }
        }
    }
}

task apiZip(type: Zip) {
    classifier = 'api'
    from sourceSets*.allSource
    include 'neresources/api/**'
    destinationDir = file 'output'
}

artifacts {
    archives apiZip
}

sourceSets.main.compileClasspath += [ configurations.compileOnly ]
idea.module.scopes.PROVIDED.plus += [ configurations.compileOnly ]
eclipse.classpath.plusConfigurations += [ configurations.compileOnly ]

build.dependsOn "apiZip"
